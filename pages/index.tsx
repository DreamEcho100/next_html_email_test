import type { NextPage } from 'next';
import Head from 'next/head';
import {
	FC,
	ImgHTMLAttributes,
	JSXElementConstructor,
	ReactElement,
	ReactFragment,
	ReactNode,
	ReactPortal,
	TableHTMLAttributes,
} from 'react';

interface ITableProps extends TableHTMLAttributes<HTMLTableElement> {
	children?:
		| string
		| number
		| boolean
		| ReactFragment
		| ReactElement<any, string | JSXElementConstructor<any>>
		| ReactPortal
		| JSX.Element
		| null
		| undefined; // ReactNode; // JSX.Element;
}

const Table: FC<ITableProps> = ({ children, ...props }) => {
	const renderBasedOnElementType = () => {
		if (Array.isArray(children))
			return (
				<tbody>
					{children.map((child, index) => {
						if (child.type === 'tr') return child;

						return (
							<tr key={child?.key || index}>
								<td>{child}</td>
							</tr>
						);
					})}
				</tbody>
			);

		return !children ||
			typeof children === 'string' ||
			typeof children === 'number' ||
			typeof children === 'boolean' ? (
			<tbody>
				<tr>
					<td>{children}</td>
				</tr>
			</tbody>
		) : 'type' in children &&
		  ['tfoot', 'thead', 'tbody'].includes(children?.type) ? (
			children
		) : (
			<tbody>{children}</tbody>
		);
	};
	return (
		<table border={0} cellSpacing='0' cellPadding={0} {...props}>
			{renderBasedOnElementType()}
		</table>
	);
};

interface IImage extends ImgHTMLAttributes<HTMLImageElement> {}

const Image: FC<IImage> = ({ src, ...props }) => {
	return (
		// eslint-disable-next-line @next/next/no-img-element
		<img
			{...{
				src: !src ? '' : src.startsWith('http') ? src : `./${src}`,
			}}
			alt=''
			{...props}
		/>
	);
};

const EmailWrapper: FC<{ children?: ReactNode }> = ({ children }) => {
	return (
		<Table
			width='100%'
			style={{
				backgroundColor: 'black',
			}}
		>
			<tr>
				<td align='center'>
					<Table
						key={2}
						style={{
							backgroundColor: 'white',
						}}
						width='600'
					>
						<tr>
							<td>{children}</td>
						</tr>
					</Table>
				</td>
			</tr>
		</Table>
	);
};

const HeaderSection = () => {
	return (
		<Table width='100%'>
			<tr>
				<td align='center'>Shop the latest</td>
			</tr>
			<tr>
				<td align='center'>View in Browser</td>
			</tr>
			<tr>
				<td align='center'>Lord Taylor</td>
			</tr>
			<tr>
				<td>
					<Table width='100%'>
						<tr>
							<td>WOMEN</td>
							<td>MEN</td>
							<td>BEAUTY</td>
							<td>HOME</td>
							<td>SALE</td>
						</tr>
					</Table>
				</td>
			</tr>
		</Table>
	);
};

const CanadaGooseSection = () => {
	return (
		<Table width='100%'>
			<tr>
				<td align='center'>FREE SHIPPING ON ORDERS OVER $99</td>
			</tr>
			<tr>
				<td align='center'>
					<Table width='100%'>
						<tr>
							<td align='center'>JUST DROPPED FOR HIM</td>
						</tr>
						<tr>
							<td align='center'>CANADA GOOSE</td>
						</tr>
						<tr>
							<td align='center'>
								Embrace the great outdoors in expertly-crafted
							</td>
						</tr>
						<tr>
							<td align='center'>SHOP NOW</td>
						</tr>
						<tr>
							<td align='center'>
								<Image src='./images/canda goose.jpeg' alt='canda goose' />
							</td>
						</tr>
					</Table>
				</td>
			</tr>
		</Table>
	);
};

const Home: NextPage = () => {
	return (
		<>
			<Head>
				<meta charSet='UTF-8' />
				<meta httpEquiv='X-UA-Compatible' content='IE=edge' />
				<meta name='viewport' content='width=device-width, initial-scale=1.0' />
				<title>Create Next App</title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='./favicon.ico' />
			</Head>

			<EmailWrapper>
				<HeaderSection />
				<CanadaGooseSection />
			</EmailWrapper>
		</>
	);
};

export default Home;
